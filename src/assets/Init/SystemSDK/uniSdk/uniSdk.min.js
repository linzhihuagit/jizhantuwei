var t, e, a, o, n, i = require("../../../../../@babel/runtime/helpers/inherits"), l = require("../../../../../@babel/runtime/helpers/createSuper"), s = require("../../../../../@babel/runtime/helpers/typeof"), r = require("../../../../../@babel/runtime/helpers/classCallCheck"), h = require("../../../../../@babel/runtime/helpers/createClass");

(t = t || {}).BrowersUtils = function() {
    function t() {
        r(this, t);
    }
    return h(t, null, [ {
        key: "reload",
        value: function() {
            window.location.reload();
        }
    }, {
        key: "redirect",
        value: function(t) {
            location.href = t;
        }
    }, {
        key: "isWechat",
        value: function() {
            var t = navigator.userAgent.toString();
            return null != t.match(/MicroMessenger/i) && "MicroMessenger" == t.match(/MicroMessenger/i).toString();
        }
    }, {
        key: "isAndroid",
        value: function() {
            var t = navigator.userAgent.toString();
            return -1 < t.indexOf("Android") || -1 < t.indexOf("Linux");
        }
    }, {
        key: "GetRequest",
        value: function(t, e) {
            var a, o = null;
            if (null != (e = (a = null != e && "" != e ? e : location.search, new RegExp("[?&]" + t + "=([^&]+)", "gi")).exec(a))) try {
                o = decodeURIComponent(decodeURIComponent(e[1]));
            } catch (t) {
                try {
                    o = decodeURIComponent(e[1]);
                } catch (t) {
                    o = e[1];
                }
            }
            return o;
        }
    }, {
        key: "GetRequests",
        value: function(t) {
            var e = null;
            e = t || location.search;
            var a = new Object();
            if (e) for (var o = (e = 0 == e.indexOf("?") ? e.substr(1) : e).split("&"), n = 0; n < o.length; n++) a[o[n].split("=")[0]] = decodeURIComponent(o[n].split("=")[1]);
            return a;
        }
    } ]), t;
}(), (t = t || {}).WebHttpRequest = function() {
    function t() {
        r(this, t), this.timeout = 0, this.callback = null, this.callbackTarget = null, 
        this._url = "", this._method = "";
    }
    return h(t, [ {
        key: "setResponseEventListener",
        value: function(t, e) {
            this.callback = t, this.callbackTarget = e;
        }
    }, {
        key: "dispatchResponseEvent",
        value: function(t) {
            t ? this.callback && this.callback.call(this.callbackTarget) : this.callback && this.callback.call(this.callbackTarget, this.response), 
            this.callback = null, this.callbackTarget = null;
        }
    }, {
        key: "response",
        get: function() {
            return this._xhr ? null != this._xhr.response ? this._xhr.response : "text" == this._responseType ? this._xhr.responseText : "arraybuffer" == this._responseType && /msie 9.0/i.test(navigator.userAgent) ? window.convertResponseBodyToText(this._xhr.responseBody) : "document" == this._responseType ? this._xhr.responseXML : null : null;
        }
    }, {
        key: "responseType",
        get: function() {
            return this._responseType;
        },
        set: function(t) {
            this._responseType = t;
        }
    }, {
        key: "withCredentials",
        get: function() {
            return this._withCredentials;
        },
        set: function(t) {
            this._withCredentials = t;
        }
    }, {
        key: "getXHR",
        value: function() {
            return window.XMLHttpRequest ? new window.XMLHttpRequest() : new ActiveXObject("MSXML2.XMLHTTP");
        }
    }, {
        key: "open",
        value: function(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "GET";
            this._url = t, this._method = e, this._xhr && (this._xhr.abort(), this._xhr = null);
            var a = this.getXHR();
            window.XMLHttpRequest ? (a.addEventListener("load", this.onload.bind(this)), a.addEventListener("error", this.onerror.bind(this))) : a.onreadystatechange = this.onReadyStateChange.bind(this), 
            a.onprogress = this.updateProgress.bind(this), a.ontimeout = this.onTimeout.bind(this), 
            a.open(this._method, this._url, !0), this._xhr = a;
        }
    }, {
        key: "send",
        value: function(t) {
            if (null != this._responseType && (this._xhr.responseType = this._responseType), 
            null != this._withCredentials && (this._xhr.withCredentials = this._withCredentials), 
            this.headerObj) for (var e in this.headerObj) this._xhr.setRequestHeader(e, this.headerObj[e]);
            this._xhr.timeout = this.timeout, this._xhr.send(t);
        }
    }, {
        key: "abort",
        value: function() {
            this._xhr && this._xhr.abort();
        }
    }, {
        key: "getAllResponseHeaders",
        value: function() {
            return this._xhr ? this._xhr.getAllResponseHeaders() || "" : null;
        }
    }, {
        key: "setRequestHeader",
        value: function(t, e) {
            this.headerObj || (this.headerObj = {}), this.headerObj[t] = e;
        }
    }, {
        key: "getResponseHeader",
        value: function(t) {
            return this._xhr ? (t = this._xhr.getResponseHeader(t)) || "" : null;
        }
    }, {
        key: "onTimeout",
        value: function() {
            this.dispatchResponseEvent(!0);
        }
    }, {
        key: "onReadyStateChange",
        value: function() {
            var t = this._xhr;
            if (4 == t.readyState) {
                var e = 400 <= t.status || 0 == t.status;
                this._url;
                var a = this;
                window.setTimeout(function() {
                    a.dispatchResponseEvent(e);
                }, 0);
            }
        }
    }, {
        key: "updateProgress",
        value: function(t) {
            t.lengthComputable;
        }
    }, {
        key: "onload",
        value: function() {
            var t = this, e = this._xhr;
            this._url;
            var a = 400 <= e.status;
            window.setTimeout(function() {
                a ? t.callback && t.callback.call(t.callbackTarget) : t.callback && t.callback.call(t.callbackTarget, t.response);
            }, 0);
        }
    }, {
        key: "onerror",
        value: function() {
            this._url;
            var t = this;
            window.setTimeout(function() {
                t.dispatchResponseEvent(!0);
            }, 0);
        }
    } ]), t;
}(), o = t = t || {}, (n = function() {
    function t() {
        r(this, t), this.url = null, this.callback = null, this.callbackTarget = null, t.clientList.push(this);
    }
    return h(t, [ {
        key: "send",
        value: function(t, e, a, n, i) {
            if (this.url && 0 < this.url.length) return !1;
            void 0 === i && (i = "POST");
            var l = this;
            if (e = "object" == s(e) ? JSON.stringify(e) : e, this.url = t, this.callback = a, 
            this.callbackTarget = n, window[o.Global.platformName] && window[o.Global.platformName].request) window[o.Global.platformName].request({
                url: this.url,
                data: e,
                method: i,
                header: {
                    "content-type": "application/json;charset=UTF-8"
                },
                success: function(t) {
                    l.onHttpComplete(t.data);
                },
                fail: function(t) {
                    l.onHttpComplete(null);
                }
            }); else {
                var r = new o.WebHttpRequest();
                r.responseType = "text", r.open(t, i), r.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8"), 
                r.send(e), r.setResponseEventListener(function(t) {
                    l.onHttpComplete(JSON.parse(t));
                }, this);
            }
        }
    }, {
        key: "destroy",
        value: function() {
            this.url = null, this.callback = null, this.callbackTarget = null;
            for (var e = 0; e < t.clientList.length; e++) if (t.clientList[e] == this) {
                t.clientList.splice(e, 1);
                break;
            }
        }
    }, {
        key: "onHttpComplete",
        value: function(t) {
            this.callback && this.callback.call(this.callbackTarget, t), this.destroy();
        }
    } ]), t;
}()).clientList = [], o.HttpClient = n, (t = t || {}).AdItemData = function() {
    return h(function t() {
        r(this, t);
    });
}(), (t = t || {}).AdConfig = function() {
    return h(function t() {
        r(this, t), this.app_key = "", this.adBannerIdList = [], this.adVideoIdList = [], 
        this.adInterstitialId = "", this.adCustomIdList = [], this.adBoxBannerId = "", this.adBoxPortalId = "", 
        this.shareInfoArr = [], this.isExportWxGameAd = !1;
    });
}(), (t = t || {}).AdBanner = function() {
    return h(function t() {
        r(this, t);
    });
}(), (t = t || {}).AdCustom = function() {
    return h(function t() {
        r(this, t);
    });
}(), (t = t || {}).AdInterstitial = function() {
    return h(function t() {
        r(this, t);
    });
}(), (t = t || {}).AdRewardedVideo = function() {
    return h(function t() {
        r(this, t);
    });
}(), e = t = t || {}, a = function(t) {
    i(o, t);
    var a = l(o);
    function o(t, e) {
        var n;
        return r(this, o), (n = a.call(this)).showTime = 0, n.maxShowTime = 10, n.bannerWidth = 0, 
        n.adUnitId = t, n.isShow = !1, n.createTimestamp = 0, n.bannerWidth = 0 < e ? e : 0, 
        n.load(), n;
    }
    return h(o, [ {
        key: "id",
        get: function() {
            return this.adUnitId;
        }
    }, {
        key: "isLoaded",
        get: function() {
            return !!this.banner;
        }
    }, {
        key: "setShowTime",
        value: function(t) {
            this.maxShowTime = t;
        }
    }, {
        key: "createBannerAd",
        value: function() {
            var t = null, a = 300;
            e.AdPlat.instance.systemInfo.windowWidth < e.AdPlat.instance.systemInfo.windowHeight && (a = e.AdPlat.instance.systemInfo.windowWidth), 
            this.bannerWidth && 0 < this.bannerWidth && (a = this.bannerWidth);
            var o = .5 * (e.AdPlat.instance.systemInfo.windowWidth - a);
            return window[e.Global.platformName] && window[e.Global.platformName].createBannerAd && e.Global.isWxgame ? window[e.Global.platformName].createBannerAd({
                adUnitId: this.adUnitId,
                adIntervals: 30,
                style: {
                    left: o,
                    top: 0,
                    width: a
                }
            }) : t;
        }
    }, {
        key: "load",
        value: function() {
            var t;
            this.bannerLoading || ((t = Date.now()) - this.createTimestamp < 6e4 ? console.warn("时间不足，未能重新加载 banner...", this.adUnitId, t - this.createTimestamp) : (this.destroy(), 
            this.bannerLoading = this.createBannerAd(), null == this.bannerLoading ? console.error("创建 Banner 失败", this.adUnitId) : (this.showTime = 0, 
            this.createTimestamp = Date.now(), this.bannerLoading.onLoad(this.onBannerLoad.bind(this)), 
            this.bannerLoading.onResize(this.onBannerResize.bind(this)), this.bannerLoading.onError(this.onBannerError.bind(this)))));
        }
    }, {
        key: "onBannerLoad",
        value: function() {
            console.log("------onBannerLoad 广告加载成功------", this.adUnitId), this.banner = this.bannerLoading, 
            this.bannerLoading = null, this.isShow && this.show(!0);
        }
    }, {
        key: "onBannerResize",
        value: function(t) {
            var a, o;
            e.Global.isWxgame && (a = e.AdPlat.instance.systemInfo.windowHeight - t.height, 
            o = .5 * (e.AdPlat.instance.systemInfo.windowWidth - t.width), console.log("----onBannerResize top:" + a + ",left:" + o + ",size", t), 
            this.bannerLoading && this.bannerLoading.style ? (this.bannerLoading.style.left = o, 
            this.bannerLoading.style.top = a) : this.banner && this.banner.style && (this.banner.style.left = o, 
            this.banner.style.top = a), t && 0 < t.width && 0 < t.height && e.notityBannerResize(t.width, t.height));
        }
    }, {
        key: "onBannerError",
        value: function(t) {
            console.warn("banner___error:", this.adUnitId), this.bannerLoading && (this.bannerLoading.offLoad(this.onBannerLoad), 
            this.bannerLoading.offResize(this.onBannerResize), this.bannerLoading.offError(this.onBannerError), 
            this.bannerLoading.destroy(), this.bannerLoading = null), this.createTimestamp = 0;
        }
    }, {
        key: "show",
        value: function(t) {
            this.isShow = !0, null == this.banner && null == this.bannerLoading ? this.load() : this.banner && this.banner.show();
        }
    }, {
        key: "hide",
        value: function() {
            if (null == this.banner) this.isShow = !1; else {
                if (this.banner.hide(), this.isShow && (this.showTime++, this.showTime > this.maxShowTime)) return this.isShow = !1, 
                void this.load();
                this.isShow = !1;
            }
        }
    }, {
        key: "destroy",
        value: function() {
            null != this.banner && (this.banner.offLoad(this.onBannerLoad), this.banner.offResize(this.onBannerResize), 
            this.banner.offError(this.onBannerError), this.banner.destroy(), this.banner = null, 
            this.createTimestamp = 0);
        }
    } ]), o;
}(e.AdBanner), e.WX_AdBanner = a, function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(e, n) {
            var i;
            if (r(this, o), (i = a.call(this)).userStyle = {
                left: 0,
                top: 0,
                width: 300,
                fixed: !1
            }, i.adUnitId = e, i.customAd = null, i.state = 0, i.isShow = !1, e = t.AdPlat.instance.systemInfo) {
                var l = e.screenWidth, s = e.screenHeight;
                e.safeArea && (e.safeArea.width && (l = e.safeArea.width), e.safeArea.height && (s = e.safeArea.height)), 
                i.userStyle.left = .5 * (l - 300), i.userStyle.top = .5 * (s - 300), i.userStyle.width = 300;
            }
            return (e = t.getCustomAdStyle(n)) && (e.left && (i.userStyle.left = e.left), e.top && (i.userStyle.top = e.top), 
            e.width && (i.userStyle.width = e.width)), i.load(), i;
        }
        return h(o, [ {
            key: "createCustomAd",
            value: function() {
                var e = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createCustomAd && t.Global.isWxgame ? window[t.Global.platformName].createCustomAd({
                    adUnitId: this.adUnitId,
                    adIntervals: 30,
                    style: this.userStyle
                }) : e;
            }
        }, {
            key: "load",
            value: function() {
                this.destroy(), this.state = 1, this.customAd = this.createCustomAd(), this.customAd.onLoad(this.onCustomLoad.bind(this)), 
                this.customAd.onError(this.onCustomError.bind(this)), this.customAd.onClose(this.onCustomClose.bind(this)), 
                this.customAd.onHide(this.onCustomHide.bind(this));
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.customAd && (this.customAd.offLoad(this.onCustomLoad), this.customAd.offError(this.onCustomError), 
                this.customAd.offClose(this.onCustomClose), this.customAd.offHide(this.onCustomHide), 
                this.customAd.destroy(), this.customAd = null);
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                if (this.showCallback = t, this.closeCallback = e, this.showCallbackTarget = a, 
                2 == this.state || 0 == this.state) return console.warn("customAd show reload...", this.adUnitId), 
                void this.load();
                this.isShow = !0;
                var o = this;
                3 == this.state && (console.warn("显示原生广告..."), this.customAd.show().then(function() {
                    t && t.call(a, !0), o.showCallback = null;
                }).catch(function(e) {
                    console.error("customAd show error.........", e), t && t.call(a, !1), o.showCallback = null;
                }));
            }
        }, {
            key: "hide",
            value: function() {
                this.isShow = !1, this.showCallback = null, this.closeCallback = null, (this.showCallbackTarget = null) != this.customAd && this.customAd.hide();
            }
        }, {
            key: "onCustomLoad",
            value: function() {
                var t = this.state;
                (this.state = 3) != t && this.isShow && this.show(this.showCallback, this.closeCallback, this.showCallbackTarget);
            }
        }, {
            key: "onCustomError",
            value: function(t) {
                console.warn("onCustomError:", t, this.adUnitId), 3 != this.state && (this.state = 2, 
                this.isShow || (this.showCallback && this.showCallback.call(this.showCallbackTarget, !1), 
                this.showCallback = null), this.isShow = !1, this.showCallback = null, this.closeCallback = null, 
                this.showCallbackTarget = null);
            }
        }, {
            key: "onCustomClose",
            value: function() {
                console.warn("onCustomClose:", this.adUnitId), this.isShow = !1, this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.showCallback = null, this.closeCallback = null, this.showCallbackTarget = null, 
                this.load();
            }
        }, {
            key: "onCustomHide",
            value: function() {
                console.warn("onCustomHide:", this.adUnitId), this.isShow = !1, this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.showCallback = null, this.closeCallback = null, this.showCallbackTarget = null;
            }
        } ]), o;
    }(t.AdCustom);
    t.WX_AdCustom = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t) {
            var e;
            return r(this, o), (e = a.call(this)).createTimestamp = 0, e.adUnitId = t, e.interstitial = null, 
            e.state = 0, e.isShow = !1, e.load(), e;
        }
        return h(o, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "isLoaded",
            get: function() {
                return 3 == this.state;
            }
        }, {
            key: "createInterstitialAd",
            value: function() {
                var e = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createInterstitialAd && t.Global.isWxgame ? window[t.Global.platformName].createInterstitialAd({
                    adUnitId: this.adUnitId
                }) : e;
            }
        }, {
            key: "load",
            value: function() {
                Date.now() - this.createTimestamp < 3e4 || (this.destroy(), this.state = 1, this.createTimestamp = Date.now(), 
                null == this.interstitial ? (this.interstitial = this.createInterstitialAd(), this.interstitial.onLoad(this.onInterstitialLoad.bind(this)), 
                this.interstitial.onError(this.onInterstitialError.bind(this)), this.interstitial.onClose(this.onInterstitialClose.bind(this)), 
                t.Global.isTTGame && this.interstitial.load()) : this.interstitial.load());
            }
        }, {
            key: "onInterstitialLoad",
            value: function() {
                this.state = 3, this.isShow && this.show(this.showCallback, this.closeCallback, this.showCallbackTarget);
            }
        }, {
            key: "onInterstitialError",
            value: function(t) {
                console.warn("onInterstitialError:", t), this.state = 2, this.isShow = !1, this.createTimestamp = 0, 
                this.showCallback && this.showCallback.call(this.showCallbackTarget, !1);
            }
        }, {
            key: "onInterstitialClose",
            value: function(t) {
                this.isShow = !1, this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.closeCallback = null, this.showCallbackTarget = null, this.load();
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                if (this.showCallback = t, this.closeCallback = e, this.showCallbackTarget = a, 
                2 == this.state || 0 == this.state) return this.showCallback && this.showCallback.call(this.showCallbackTarget, !1), 
                void this.load();
                this.isShow = !0, 3 == this.state && (console.warn("显示插屏广告..."), this.interstitial.show().then(function(e) {
                    t && t.call(a, !0);
                }).catch(function(e) {
                    console.error("interstitial show error.........", e), t && t.call(a, !1);
                }));
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.interstitial && (console.log("destroy AdInterstitial"), this.interstitial.offLoad(this.onInterstitialLoad), 
                this.interstitial.offError(this.onInterstitialError), this.interstitial.offClose(this.onInterstitialClose), 
                this.state = 0, this.interstitial.destroy(), this.interstitial = null, this.createTimestamp = 0);
            }
        } ]), o;
    }(t.AdInterstitial);
    t.WX_AdInterstitial = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t) {
            var e;
            r(this, o), (e = a.call(this)).showForLoading = !1, e.unitIdList = [];
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                0 < i.length && e.unitIdList.push(i);
            }
            return e.adUnitId = "", e.videoAd = null, e.callback = null, e.callbackTarget = null, 
            e.load(0), e;
        }
        return h(o, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "createRewardedVideoAd",
            value: function(e) {
                var a = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createRewardedVideoAd && (console.log("正在创建视频实例", e), 
                a = window[t.Global.platformName].createRewardedVideoAd({
                    adUnitId: e,
                    multiton: !0
                })), a;
            }
        }, {
            key: "load",
            value: function(t) {
                this.destroy(), t = this.unitIdList[t], this.adUnitId = t, this.videoAd = this.createRewardedVideoAd(t), 
                this.videoAd.onLoad(this.onVideoLoad.bind(this)), this.videoAd.onError(this.onVideoError.bind(this)), 
                this.videoAd.onClose(this.onVideoClose.bind(this)), this.videoAd.load();
            }
        }, {
            key: "onVideoLoad",
            value: function() {
                if (console.log("------onVideoLoad 广告加载成功------", this.adUnitId), this.showForLoading) {
                    this.showForLoading = !1;
                    var t = this.callback, e = this.callbackTarget;
                    this.videoAd.show().then(function(t) {}).catch(function(a) {
                        console.error("rewardedVideo show error222.........", a), t && t.call(e, -1);
                    });
                }
            }
        }, {
            key: "onVideoError",
            value: function(t) {
                console.warn("onVideoError:", t), this.showForLoading = !1, this.callback && this.callback.call(this.callbackTarget, -1), 
                this.callback = null, this.callbackTarget = null;
            }
        }, {
            key: "onVideoClose",
            value: function(t) {
                var e = 0;
                (t && t.isEnded || void 0 === t) && (e = 1), this.callback && this.callback.call(this.callbackTarget, e), 
                this.callback = null, this.callbackTarget = null;
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                (null == t || t < 0 || t >= this.unitIdList.length) && (t = 0), this.callback = e, 
                this.callbackTarget = a;
                var o = this;
                if (this.unitIdList[t] != this.adUnitId || null == this.videoAd) return this.showForLoading = !0, 
                void this.load(t);
                this.videoAd.show().then(function(t) {
                    console.log("rewardedVideo show ok", t);
                }).catch(function(t) {
                    console.error("视频显示失败，正在尝试重加载,", t), o.showForLoading = !0, o.videoAd.load();
                });
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.videoAd && (console.log("AdRewardedVideo destroy", this.adUnitId), 
                this.videoAd.offLoad(this.onVideoLoad), this.videoAd.offError(this.onVideoError), 
                this.videoAd.offClose(this.onVideoClose), this.videoAd.destroy(), this.videoAd = null, 
                this.adUnitId = "");
            }
        } ]), o;
    }(t.AdRewardedVideo);
    t.WX_AdRewardedVideo = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t, e) {
            var n;
            return r(this, o), (n = a.call(this)).showTime = 0, n.maxShowTime = 10, n.bannerWidth = 0, 
            n.adUnitId = t, n.isShow = !1, n.createTimestamp = 0, n.bannerWidth = 0 < e ? e : 0, 
            n;
        }
        return h(o, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "isLoaded",
            get: function() {
                return !!this.banner;
            }
        }, {
            key: "setShowTime",
            value: function(t) {
                this.maxShowTime = t;
            }
        }, {
            key: "createBannerAd",
            value: function() {
                var e = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createBannerAd ? window[t.Global.platformName].createBannerAd({
                    posId: this.adUnitId
                }) : e;
            }
        }, {
            key: "load",
            value: function() {
                var t;
                this.bannerLoading || ((t = Date.now()) - this.createTimestamp < 6e4 ? console.warn("时间不足，未能重新加载 banner...", this.adUnitId, t - this.createTimestamp) : (this.destroy(), 
                this.bannerLoading = this.createBannerAd(), null == this.bannerLoading ? console.error("创建 Banner 失败", this.adUnitId) : (this.showTime = 0, 
                this.createTimestamp = Date.now(), this.bannerLoading.onLoad(this.onBannerLoad.bind(this)), 
                this.bannerLoading.onError(this.onBannerError.bind(this)))));
            }
        }, {
            key: "onBannerLoad",
            value: function() {
                console.log("------onBannerLoad 广告加载成功------", this.adUnitId), this.banner = this.bannerLoading, 
                this.bannerLoading = null, this.isShow && this.show(!0);
            }
        }, {
            key: "onBannerResize",
            value: function(t) {}
        }, {
            key: "onBannerError",
            value: function(t) {
                console.warn("banner___error:", this.adUnitId), this.bannerLoading && (this.bannerLoading.offLoad(this.onBannerLoad), 
                this.bannerLoading.offError(this.onBannerError), this.bannerLoading.destroy(), this.bannerLoading = null), 
                this.createTimestamp = 0;
            }
        }, {
            key: "show",
            value: function(t) {
                this.isShow = !0, null == this.banner && null == this.bannerLoading ? this.load() : this.banner && this.banner.show();
            }
        }, {
            key: "hide",
            value: function() {
                if (null == this.banner) this.isShow = !1; else {
                    if (this.banner.hide(), this.isShow && (this.showTime++, this.showTime > this.maxShowTime)) return this.isShow = !1, 
                    void this.load();
                    this.isShow = !1;
                }
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.banner && (this.banner.offLoad(this.onBannerLoad), this.banner.offError(this.onBannerError), 
                this.banner.destroy(), this.banner = null, this.createTimestamp = 0);
            }
        } ]), o;
    }(t.AdBanner);
    t.VIVO_AdBanner = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t, e) {
            var n;
            return r(this, o), (n = a.call(this)).adUnitId = t, n.customAd = null, n.adIndex = e, 
            n.state = 0, n.load(), n;
        }
        return h(o, [ {
            key: "createCustomAd",
            value: function(e) {
                var a = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createCustomAd ? e ? window[t.Global.platformName].createCustomAd({
                    posId: this.adUnitId,
                    style: e
                }) : window[t.Global.platformName].createCustomAd({
                    posId: this.adUnitId
                }) : a;
            }
        }, {
            key: "load",
            value: function() {
                this.destroy(), this.state = 1;
                var e = t.getCustomAdStyle(this.adIndex);
                e ? e.left && e.top ? this.customAd = this.createCustomAd({
                    left: e.left,
                    top: e.top
                }) : e.top ? this.customAd = this.createCustomAd({
                    top: e.top
                }) : e.left ? this.customAd = this.createCustomAd({
                    left: e.left
                }) : this.customAd = this.createCustomAd() : this.customAd = this.createCustomAd(), 
                this.customAd ? (this.customAd.onLoad(this.onCustomLoad.bind(this)), this.customAd.onError(this.onCustomError.bind(this)), 
                this.customAd.onClose(this.onCustomClose.bind(this)), this.customAd.onHide(this.onCustomHide.bind(this))) : console.error(t.Global.platformName + ".createCustomAd 不存在, 需支持最低平台版本号'1094' (minPlatformVersion>='1094')");
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.customAd && (this.customAd.offLoad(this.onCustomLoad), this.customAd.offError(this.onCustomError), 
                this.customAd.offClose(this.onCustomClose), this.customAd.offHide(this.onCustomHide), 
                this.customAd.destroy(), this.customAd = null);
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                if (this.customAd) {
                    if (this.showCallback = t, this.closeCallback = e, this.showCallbackTarget = a, 
                    2 == this.state || 0 == this.state) return console.warn("customAd show reload...", this.adUnitId), 
                    void this.load();
                    this.isShow = !0;
                    var o = this;
                    3 == this.state && (console.warn("显示原生广告..."), this.customAd.show().then(function() {
                        t && t.call(a, !0), o.showCallback = null;
                    }).catch(function(e) {
                        console.error("customAd show error.........", e), t && t.call(a, !1), o.showCallback = null;
                    }));
                } else t && t.call(a, !1);
            }
        }, {
            key: "hide",
            value: function() {
                this.isShow = !1, this.showCallback = null, this.closeCallback = null, (this.showCallbackTarget = null) != this.customAd && this.customAd.hide();
            }
        }, {
            key: "onCustomLoad",
            value: function() {
                var t = this.state;
                (this.state = 3) != t && this.isShow && this.show(this.showCallback, this.closeCallback, this.showCallbackTarget);
            }
        }, {
            key: "onCustomError",
            value: function(t) {
                console.warn("onCustomError:", t, this.adUnitId), 3 != this.state && (this.state = 2, 
                this.isShow || (this.showCallback && this.showCallback.call(this.showCallbackTarget, !1), 
                this.showCallback = null), this.isShow = !1, this.showCallback = null, this.closeCallback = null, 
                this.showCallbackTarget = null);
            }
        }, {
            key: "onCustomClose",
            value: function() {
                console.warn("onCustomClose:", this.adUnitId), this.isShow = !1, this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.showCallback = null, this.closeCallback = null, this.showCallbackTarget = null, 
                this.load();
            }
        }, {
            key: "onCustomHide",
            value: function() {
                console.warn("onCustomHide:", this.adUnitId), this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.showCallback = null, this.closeCallback = null, this.showCallbackTarget = null;
            }
        } ]), o;
    }(t.AdCustom);
    t.VIVO_AdCustom = e;
}(t = t || {}), function(t) {
    var e = function(t) {
        i(a, t);
        var e = l(a);
        function a(t) {
            var o;
            return r(this, a), (o = e.call(this)).adUnitId = t, o;
        }
        return h(a, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "isLoaded",
            get: function() {
                return !1;
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                t && t.call(a, !1);
            }
        }, {
            key: "destroy",
            value: function() {}
        } ]), a;
    }(t.AdInterstitial);
    t.VIVO_AdInterstitial = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t) {
            var e;
            return r(this, o), (e = a.call(this)).showForLoading = !1, e.adUnitId = t[0], e.videoAd = null, 
            e.callback = null, e.callbackTarget = null, e;
        }
        return h(o, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "createRewardedVideoAd",
            value: function(e) {
                var a = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createRewardedVideoAd ? window[t.Global.platformName].createRewardedVideoAd({
                    posId: e
                }) : a;
            }
        }, {
            key: "load",
            value: function() {
                this.videoAd ? this.videoAd.load() : (this.videoAd = this.createRewardedVideoAd(this.adUnitId), 
                this.videoAd.onLoad(this.onVideoLoad.bind(this)), this.videoAd.onError(this.onVideoError.bind(this)), 
                this.videoAd.onClose(this.onVideoClose.bind(this)));
            }
        }, {
            key: "onVideoLoad",
            value: function() {
                if (console.log("------onVideoLoad 广告加载成功------", this.adUnitId), this.showForLoading) {
                    this.showForLoading = !1;
                    var t = this.callback, e = this.callbackTarget;
                    this.videoAd.show().then(function() {}).catch(function(a) {
                        console.error("rewardedVideo show error.........", a), t && t.call(e, -1);
                    });
                }
            }
        }, {
            key: "onVideoError",
            value: function(t) {
                console.warn("onVideoError:", t), this.showForLoading = !1, this.callback && this.callback.call(this.callbackTarget, -1), 
                this.callback = null, this.callbackTarget = null;
            }
        }, {
            key: "onVideoClose",
            value: function(t) {
                var e = 0;
                (t && t.isEnded || void 0 === t) && (e = 1), this.callback && this.callback.call(this.callbackTarget, e), 
                this.callback = null, this.callbackTarget = null;
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                this.callback = e, this.callbackTarget = a, this.showForLoading = !0, this.load();
            }
        }, {
            key: "destroy",
            value: function() {
                console.log("AdRewardedVideo destroy", this.adUnitId), null != this.videoAd && (this.videoAd.offLoad(this.onVideoLoad), 
                this.videoAd.offError(this.onVideoError), this.videoAd.offClose(this.onVideoClose), 
                this.videoAd.destroy(), this.videoAd = null, this.adUnitId = "");
            }
        } ]), o;
    }(t.AdRewardedVideo);
    t.VIVO_AdRewardedVideo = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t, e) {
            var n;
            return r(this, o), (n = a.call(this)).showTime = 0, n.maxShowTime = 10, n.bannerWidth = 0, 
            n.adUnitId = t, n.isShow = !1, n.createTimestamp = 0, n.bannerWidth = 0 < e ? e : 0, 
            n;
        }
        return h(o, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "isLoaded",
            get: function() {
                return !!this.banner;
            }
        }, {
            key: "setShowTime",
            value: function(t) {
                this.maxShowTime = t;
            }
        }, {
            key: "createBannerAd",
            value: function() {
                var e = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createBannerAd ? window[t.Global.platformName].createBannerAd({
                    adUnitId: this.adUnitId
                }) : e;
            }
        }, {
            key: "load",
            value: function() {
                var t;
                this.bannerLoading ? console.warn("this.bannerLoading = true , banner loading...") : (t = Date.now()) - this.createTimestamp < 6e4 ? console.warn("时间不足，未能重新加载 banner...", this.adUnitId, t - this.createTimestamp) : (console.log("正在加载banner"), 
                this.destroy(), this.bannerLoading = this.createBannerAd(), null == this.bannerLoading ? console.error("创建 Banner 失败", this.adUnitId) : (this.showTime = 0, 
                this.createTimestamp = Date.now(), this.bannerLoading.onLoad(this.onBannerLoad.bind(this)), 
                this.bannerLoading.onError(this.onBannerError.bind(this))));
            }
        }, {
            key: "onBannerLoad",
            value: function() {
                console.log("------onBannerLoad 广告加载成功------", this.adUnitId), this.banner = this.bannerLoading, 
                this.bannerLoading = null, this.isShow && this.show(!0);
            }
        }, {
            key: "onBannerResize",
            value: function(t) {}
        }, {
            key: "onBannerError",
            value: function(t) {
                console.warn("banner___error:", this.adUnitId), this.bannerLoading && (this.bannerLoading.offLoad(this.onBannerLoad), 
                this.bannerLoading.offError(this.onBannerError), this.bannerLoading.destroy(), this.bannerLoading = null), 
                this.createTimestamp = 0;
            }
        }, {
            key: "show",
            value: function(t) {
                this.isShow = !0, null == this.banner && null == this.bannerLoading ? this.load() : this.banner && this.banner.show();
            }
        }, {
            key: "hide",
            value: function() {
                if (null == this.banner) this.isShow = !1; else {
                    if (this.banner.hide(), this.isShow && (this.showTime++, this.showTime > this.maxShowTime)) return this.isShow = !1, 
                    void this.load();
                    this.isShow = !1;
                }
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.banner && (this.banner.offLoad(this.onBannerLoad), this.banner.offError(this.onBannerError), 
                this.banner.destroy(), this.banner = null, this.createTimestamp = 0);
            }
        } ]), o;
    }(t.AdBanner);
    t.OPPO_AdBanner = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t, e) {
            var n;
            return r(this, o), (n = a.call(this)).adUnitId = t, n.customAd = null, n.adIndex = e, 
            n.state = 0, n.load(), n;
        }
        return h(o, [ {
            key: "createCustomAd",
            value: function(e) {
                var a = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createCustomAd ? e ? window[t.Global.platformName].createCustomAd({
                    adUnitId: this.adUnitId,
                    style: e
                }) : window[t.Global.platformName].createCustomAd({
                    adUnitId: this.adUnitId
                }) : a;
            }
        }, {
            key: "load",
            value: function() {
                this.destroy(), this.state = 1;
                var e = t.getCustomAdStyle(this.adIndex);
                e && e.left && e.top ? this.customAd = this.createCustomAd({
                    left: e.left,
                    top: e.top
                }) : this.customAd = this.createCustomAd(), this.customAd ? (this.customAd.onLoad ? this.customAd.onLoad(this.onCustomLoad.bind(this)) : console.error("不存在 customAd.onLoad"), 
                this.customAd.onError ? this.customAd.onError(this.onCustomError.bind(this)) : console.error("不存在 customAd.onError"), 
                this.customAd.onClose ? this.customAd.onClose(this.onCustomClose.bind(this)) : console.error("不存在 customAd.onClose"), 
                this.customAd.onHide ? this.customAd.onHide(this.onCustomHide.bind(this)) : console.error("不存在 customAd.onHide")) : console.error(t.Global.platformName + ".createCustomAd 不存在, 需支持最低平台版本号'1094' (minPlatformVersion>='1094')");
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.customAd && (this.customAd.offLoad(this.onCustomLoad), this.customAd.offError(this.onCustomError), 
                this.customAd.offClose(this.onCustomClose), this.customAd.offHide(this.onCustomHide), 
                this.customAd.destroy(), this.customAd = null);
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                if (this.showCallback = t, this.closeCallback = e, this.showCallbackTarget = a, 
                2 == this.state || 0 == this.state) return console.warn("customAd show reload...", this.adUnitId), 
                void this.load();
                this.isShow = !0;
                var o = this;
                3 == this.state && (console.warn("显示原生广告..."), this.customAd.show().then(function() {
                    t && t.call(a, !0), o.showCallback = null;
                }).catch(function(e) {
                    console.error("customAd show error.........", e), t && t.call(a, !1), o.showCallback = null;
                }));
            }
        }, {
            key: "hide",
            value: function() {
                this.isShow = !1, this.showCallback = null, this.closeCallback = null, (this.showCallbackTarget = null) != this.customAd && this.customAd.hide();
            }
        }, {
            key: "onCustomLoad",
            value: function() {
                var t = this.state;
                (this.state = 3) != t && this.isShow && this.show(this.showCallback, this.closeCallback, this.showCallbackTarget);
            }
        }, {
            key: "onCustomError",
            value: function(t) {
                console.warn("onCustomError:", t, this.adUnitId), 3 != this.state && (this.state = 2, 
                this.isShow || (this.showCallback && this.showCallback.call(this.showCallbackTarget, !1), 
                this.showCallback = null), this.isShow = !1, this.showCallback = null, this.closeCallback = null, 
                this.showCallbackTarget = null);
            }
        }, {
            key: "onCustomClose",
            value: function() {
                console.warn("onCustomClose:", this.adUnitId), this.isShow = !1, this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.showCallback = null, this.closeCallback = null, this.showCallbackTarget = null, 
                this.load();
            }
        }, {
            key: "onCustomHide",
            value: function() {
                console.warn("onCustomHide:", this.adUnitId), this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.showCallback = null, this.closeCallback = null, this.showCallbackTarget = null;
            }
        } ]), o;
    }(t.AdCustom);
    t.OPPO_AdCustom = e;
}(t = t || {}), function(t) {
    var e = function(t) {
        i(a, t);
        var e = l(a);
        function a(t) {
            var o;
            return r(this, a), (o = e.call(this)).adUnitId = t, o;
        }
        return h(a, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "isLoaded",
            get: function() {
                return !1;
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                t && t.call(a, !1);
            }
        }, {
            key: "destroy",
            value: function() {}
        } ]), a;
    }(t.AdInterstitial);
    t.OPPO_AdInterstitial = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t) {
            var e;
            return r(this, o), (e = a.call(this)).showForLoading = !1, e.adUnitId = t[0], e.videoAd = null, 
            e.callback = null, e.callbackTarget = null, e;
        }
        return h(o, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "createRewardedVideoAd",
            value: function(e) {
                var a = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createRewardedVideoAd ? window[t.Global.platformName].createRewardedVideoAd({
                    adUnitId: e
                }) : a;
            }
        }, {
            key: "load",
            value: function() {
                this.videoAd ? this.videoAd.load() : (this.videoAd = this.createRewardedVideoAd(this.adUnitId), 
                this.videoAd.onLoad(this.onVideoLoad.bind(this)), this.videoAd.onError(this.onVideoError.bind(this)), 
                this.videoAd.onClose(this.onVideoClose.bind(this)));
            }
        }, {
            key: "onVideoLoad",
            value: function() {
                if (console.log("------onVideoLoad 广告加载成功------", this.adUnitId), this.showForLoading) {
                    this.showForLoading = !1;
                    var t = this.callback, e = this.callbackTarget;
                    this.videoAd.show().then(function() {}).catch(function(a) {
                        console.error("rewardedVideo show error.........", a), t && t.call(e, -1);
                    });
                }
            }
        }, {
            key: "onVideoError",
            value: function(t) {
                console.warn("onVideoError:", t), this.showForLoading = !1, this.callback && this.callback.call(this.callbackTarget, -1), 
                this.callback = null, this.callbackTarget = null;
            }
        }, {
            key: "onVideoClose",
            value: function(t) {
                var e = 0;
                (t && t.isEnded || void 0 === t) && (e = 1), this.callback && this.callback.call(this.callbackTarget, e), 
                this.callback = null, this.callbackTarget = null;
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                this.callback = e, this.callbackTarget = a, this.showForLoading = !0, this.load();
            }
        }, {
            key: "destroy",
            value: function() {
                console.log("AdRewardedVideo destroy", this.adUnitId), null != this.videoAd && (this.videoAd.offLoad(this.onVideoLoad), 
                this.videoAd.offError(this.onVideoError), this.videoAd.offClose(this.onVideoClose), 
                this.videoAd.destroy(), this.videoAd = null, this.adUnitId = "");
            }
        } ]), o;
    }(t.AdRewardedVideo);
    t.OPPO_AdRewardedVideo = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t, e) {
            var n;
            return r(this, o), (n = a.call(this)).showTime = 0, n.maxShowTime = 10, n.bannerWidth = 0, 
            console.log("TT_AdBanner 构造", t), n.adUnitId = t, n.isShow = !1, n.createTimestamp = 0, 
            n.bannerWidth = 0 < e ? e : 0, n.load(), n;
        }
        return h(o, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "isLoaded",
            get: function() {
                return !!this.banner;
            }
        }, {
            key: "setShowTime",
            value: function(t) {
                this.maxShowTime = t;
            }
        }, {
            key: "createBannerAd",
            value: function() {
                var e = null, a = 300;
                t.AdPlat.instance.systemInfo.windowWidth < t.AdPlat.instance.systemInfo.windowHeight && (a = t.AdPlat.instance.systemInfo.windowWidth), 
                this.bannerWidth && 0 < this.bannerWidth && (a = this.bannerWidth);
                var o = .5 * (t.AdPlat.instance.systemInfo.windowWidth - a);
                return window[t.Global.platformName] && window[t.Global.platformName].createBannerAd ? window[t.Global.platformName].createBannerAd({
                    adUnitId: this.adUnitId,
                    adIntervals: 30,
                    style: {
                        left: o,
                        top: 0,
                        width: a
                    }
                }) : e;
            }
        }, {
            key: "load",
            value: function() {
                var t;
                this.bannerLoading || ((t = Date.now()) - this.createTimestamp < 6e4 ? console.warn("时间不足，未能重新加载 banner...", this.adUnitId, t - this.createTimestamp) : (this.destroy(), 
                this.bannerLoading = this.createBannerAd(), null == this.bannerLoading ? console.error("创建 Banner 失败", this.adUnitId) : (console.log("tt banner loading....", this.adUnitId), 
                this.showTime = 0, this.createTimestamp = Date.now(), this.bannerLoading.onLoad(this.onBannerLoad.bind(this)), 
                this.bannerLoading.onResize(this.onBannerResize.bind(this)), this.bannerLoading.onError(this.onBannerError.bind(this)))));
            }
        }, {
            key: "onBannerLoad",
            value: function() {
                console.log("------tt onBannerLoad 广告加载成功------", this.adUnitId), this.banner = this.bannerLoading, 
                this.bannerLoading = null, this.isShow && this.show(!0);
            }
        }, {
            key: "onBannerResize",
            value: function(e) {
                var a = t.AdPlat.instance.systemInfo.windowHeight - e.height, o = .5 * (t.AdPlat.instance.systemInfo.windowWidth - e.width);
                console.log("----onBannerResize top:" + a + ",left:" + o + ",size", e), this.bannerLoading && this.bannerLoading.style ? (this.bannerLoading.style.left = o, 
                this.bannerLoading.style.top = a) : this.banner && this.banner.style && (this.banner.style.left = o, 
                this.banner.style.top = a), e && 0 < e.width && 0 < e.height && t.notityBannerResize(e.width, e.height);
            }
        }, {
            key: "onBannerError",
            value: function(t) {
                console.warn("tt banner___error:", this.adUnitId, t), this.bannerLoading && (this.bannerLoading.offLoad(this.onBannerLoad), 
                this.bannerLoading.offResize(this.onBannerResize), this.bannerLoading.offError(this.onBannerError), 
                this.bannerLoading.destroy(), this.bannerLoading = null), this.createTimestamp = 0;
            }
        }, {
            key: "show",
            value: function(t) {
                this.isShow = !0, null == this.banner && null == this.bannerLoading ? this.load() : this.banner && this.banner.show();
            }
        }, {
            key: "hide",
            value: function() {
                if (null == this.banner) this.isShow = !1; else {
                    if (this.banner.hide(), this.isShow && (this.showTime++, this.showTime > this.maxShowTime)) return this.isShow = !1, 
                    void this.load();
                    this.isShow = !1;
                }
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.banner && (this.banner.offLoad(this.onBannerLoad), this.banner.offResize(this.onBannerResize), 
                this.banner.offError(this.onBannerError), this.banner.destroy(), this.banner = null, 
                this.createTimestamp = 0);
            }
        } ]), o;
    }(t.AdBanner);
    t.TT_AdBanner = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(e, n) {
            var i;
            if (r(this, o), (i = a.call(this)).userStyle = {
                left: 0,
                top: 0,
                width: 300,
                fixed: !1
            }, i.adUnitId = e, i.customAd = null, i.state = 0, i.isShow = !1, e = t.AdPlat.instance.systemInfo) {
                var l = e.screenWidth, s = e.screenHeight;
                e.safeArea && (e.safeArea.width && (l = e.safeArea.width), e.safeArea.height && (s = e.safeArea.height)), 
                i.userStyle.left = .5 * (l - 300), i.userStyle.top = .5 * (s - 300), i.userStyle.width = 300;
            }
            return (e = t.getCustomAdStyle(n)) && (e.left && (i.userStyle.left = e.left), e.top && (i.userStyle.top = e.top), 
            e.width && (i.userStyle.width = e.width)), i.load(), i;
        }
        return h(o, [ {
            key: "createCustomAd",
            value: function() {
                var e = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createCustomAd ? window[t.Global.platformName].createCustomAd({
                    adUnitId: this.adUnitId,
                    adIntervals: 30,
                    style: this.userStyle
                }) : e;
            }
        }, {
            key: "load",
            value: function() {
                this.destroy(), this.state = 1, this.customAd = this.createCustomAd(), this.customAd.onLoad(this.onCustomLoad.bind(this)), 
                this.customAd.onError(this.onCustomError.bind(this)), this.customAd.onClose(this.onCustomClose.bind(this)), 
                this.customAd.onHide(this.onCustomHide.bind(this));
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.customAd && (this.customAd.offLoad(this.onCustomLoad), this.customAd.offError(this.onCustomError), 
                this.customAd.offClose(this.onCustomClose), this.customAd.offHide(this.onCustomHide), 
                this.customAd.destroy(), this.customAd = null);
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                if (this.showCallback = t, this.closeCallback = e, this.showCallbackTarget = a, 
                2 == this.state || 0 == this.state) return console.warn("customAd show reload...", this.adUnitId), 
                void this.load();
                this.isShow = !0;
                var o = this;
                3 == this.state && (console.warn("显示原生广告..."), this.customAd.show().then(function() {
                    t && t.call(a, !0), o.showCallback = null;
                }).catch(function(e) {
                    console.error("customAd show error.........", e), t && t.call(a, !1), o.showCallback = null;
                }));
            }
        }, {
            key: "hide",
            value: function() {
                this.isShow = !1, this.showCallback = null, this.closeCallback = null, (this.showCallbackTarget = null) != this.customAd && this.customAd.hide();
            }
        }, {
            key: "onCustomLoad",
            value: function() {
                var t = this.state;
                (this.state = 3) != t && this.isShow && this.show(this.showCallback, this.closeCallback, this.showCallbackTarget);
            }
        }, {
            key: "onCustomError",
            value: function(t) {
                console.warn("onCustomError:", t, this.adUnitId), 3 != this.state && (this.state = 2, 
                this.isShow || (this.showCallback && this.showCallback.call(this.showCallbackTarget, !1), 
                this.showCallback = null), this.isShow = !1, this.showCallback = null, this.closeCallback = null, 
                this.showCallbackTarget = null);
            }
        }, {
            key: "onCustomClose",
            value: function() {
                console.warn("onCustomClose:", this.adUnitId), this.isShow = !1, this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.showCallback = null, this.closeCallback = null, this.showCallbackTarget = null, 
                this.load();
            }
        }, {
            key: "onCustomHide",
            value: function() {
                console.warn("onCustomHide:", this.adUnitId), this.isShow = !1, this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.showCallback = null, this.closeCallback = null, this.showCallbackTarget = null;
            }
        } ]), o;
    }(t.AdCustom);
    t.TT_AdCustom = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t) {
            var e;
            return r(this, o), (e = a.call(this)).createTimestamp = 0, console.log("TT_AdInterstitial 构造", t), 
            e.adUnitId = t, e.interstitial = null, e.state = 0, e.isShow = !1, e.load(), e;
        }
        return h(o, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "isLoaded",
            get: function() {
                return 3 == this.state;
            }
        }, {
            key: "createInterstitialAd",
            value: function() {
                var e = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createInterstitialAd ? window[t.Global.platformName].createInterstitialAd({
                    adUnitId: this.adUnitId
                }) : e;
            }
        }, {
            key: "load",
            value: function() {
                Date.now() - this.createTimestamp < 3e4 || (this.destroy(), this.state = 1, this.createTimestamp = Date.now(), 
                null == this.interstitial ? (this.interstitial = this.createInterstitialAd(), this.interstitial.onLoad(this.onInterstitialLoad.bind(this)), 
                this.interstitial.onError(this.onInterstitialError.bind(this)), this.interstitial.onClose(this.onInterstitialClose.bind(this)), 
                t.Global.isTTGame && this.interstitial.load()) : this.interstitial.load());
            }
        }, {
            key: "onInterstitialLoad",
            value: function() {
                this.state = 3, this.isShow && this.show(this.showCallback, this.closeCallback, this.showCallbackTarget);
            }
        }, {
            key: "onInterstitialError",
            value: function(t) {
                console.warn("onInterstitialError:", t), this.state = 2, this.isShow = !1, this.createTimestamp = 0, 
                this.showCallback && this.showCallback.call(this.showCallbackTarget, !1);
            }
        }, {
            key: "onInterstitialClose",
            value: function(t) {
                this.isShow = !1, this.closeCallback && this.closeCallback.call(this.showCallbackTarget), 
                this.closeCallback = null, this.showCallbackTarget = null, this.load();
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                if (this.showCallback = t, this.closeCallback = e, this.showCallbackTarget = a, 
                2 == this.state || 0 == this.state) return this.showCallback && this.showCallback.call(this.showCallbackTarget, !1), 
                void this.load();
                this.isShow = !0, 3 == this.state && (console.warn("显示插屏广告..."), this.interstitial.show().then(function(e) {
                    t && t.call(a, !0);
                }).catch(function(e) {
                    console.error("interstitial show error.........", e), t && t.call(a, !1);
                }));
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.interstitial && (console.log("destroy AdInterstitial"), this.interstitial.offLoad(this.onInterstitialLoad), 
                this.interstitial.offError(this.onInterstitialError), this.interstitial.offClose(this.onInterstitialClose), 
                this.state = 0, this.interstitial.destroy(), this.interstitial = null, this.createTimestamp = 0);
            }
        } ]), o;
    }(t.AdInterstitial);
    t.TT_AdInterstitial = e;
}(t = t || {}), function(t) {
    var e = function(e) {
        i(o, e);
        var a = l(o);
        function o(t) {
            var e;
            r(this, o), (e = a.call(this)).showForLoading = !1, console.log("TT_AdRewardedVideo 构造", t), 
            e.unitIdList = [];
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                0 < i.length && e.unitIdList.push(i);
            }
            return e.adUnitId = "", e.videoAd = null, e.callback = null, e.callbackTarget = null, 
            e.load(0), e;
        }
        return h(o, [ {
            key: "id",
            get: function() {
                return this.adUnitId;
            }
        }, {
            key: "createRewardedVideoAd",
            value: function(e) {
                var a = null;
                return window[t.Global.platformName] && window[t.Global.platformName].createRewardedVideoAd ? window[t.Global.platformName].createRewardedVideoAd({
                    adUnitId: e
                }) : a;
            }
        }, {
            key: "load",
            value: function(t) {
                console.log("load ", t, this.videoAd), this.destroy(), t = this.unitIdList[t], this.adUnitId = t, 
                console.log("createRewardedVideoAd", t), this.videoAd = this.createRewardedVideoAd(t), 
                console.log(this.videoAd), this.videoAd.onLoad(this.onVideoLoad.bind(this)), this.videoAd.onError(this.onVideoError.bind(this)), 
                this.videoAd.onClose(this.onVideoClose.bind(this));
            }
        }, {
            key: "onVideoLoad",
            value: function() {
                if (console.log("------tt onVideoLoad 广告加载成功------", this.adUnitId), this.showForLoading) {
                    this.showForLoading = !1;
                    var t = this.callback, e = this.callbackTarget;
                    this.videoAd.show().then(function(t) {}).catch(function(a) {
                        console.error("rewardedVideo show error.........", a), t && t.call(e, -1);
                    });
                }
            }
        }, {
            key: "onVideoError",
            value: function(t) {
                console.warn("tt onVideoError:", t), this.showForLoading = !1, this.callback && this.callback.call(this.callbackTarget, -1), 
                this.callback = null, this.callbackTarget = null;
            }
        }, {
            key: "onVideoClose",
            value: function(t) {
                var e = 0;
                (t && t.isEnded || void 0 === t) && (e = 1), this.callback && this.callback.call(this.callbackTarget, e), 
                this.callback = null, this.callbackTarget = null;
            }
        }, {
            key: "show",
            value: function(t, e, a) {
                if ((null == t || t < 0 || t >= this.unitIdList.length) && (t = 0), this.callback = e, 
                this.callbackTarget = a, this.unitIdList[t] != this.adUnitId || null == this.videoAd) return this.showForLoading = !0, 
                void this.load(t);
                this.videoAd.show().then(function(t) {
                    console.log("rewardedVideo show ok", t);
                }).catch(function(t) {
                    console.error("rewardedVideo show error.........", t), e && e.call(a, -1);
                });
            }
        }, {
            key: "destroy",
            value: function() {
                null != this.videoAd && (console.log("tt AdRewardedVideo destroy", this.adUnitId), 
                this.videoAd.offLoad(this.onVideoLoad), this.videoAd.offError(this.onVideoError), 
                this.videoAd.offClose(this.onVideoClose), this.videoAd.destroy(), this.videoAd = null, 
                this.adUnitId = "");
            }
        } ]), o;
    }(t.AdRewardedVideo);
    t.TT_AdRewardedVideo = e;
}(t = t || {}), function(t) {
    var e = function() {
        function e() {
            r(this, e), this.isInit = !1, this.showBannerTimeout = null, this.curBannerIndex = 0, 
            this.autoBannerCallback = null, this.autoBannerCallbackTarget = null, this.wx_isShared = !1, 
            this.wx_sharedCloseTime = 0, this.shareInfoArr = [], this.banners = [], this.customs = [], 
            this.bannerWidth = 0, this.recordState = 0, this.recordDuration = 0, this.startRecordTimestamp = 0, 
            this.boxBannerAd = null, this.boxPortalAd = null, this.isVideoShowed = !1;
        }
        return h(e, [ {
            key: "getSystemInfoSync",
            value: function() {
                var e = null;
                if (window[t.Global.platformName] && window[t.Global.platformName].getSystemInfoSync) e = window[t.Global.platformName].getSystemInfoSync(); else {
                    var a = {};
                    a.screenWidth = t.Global.screenWidth, a.screenHeight = t.Global.screenHeight, a.windowWidth = t.Global.screenWidth, 
                    a.windowHeight = t.Global.screenHeight, e = a;
                }
                return e;
            }
        }, {
            key: "regisiterCallback",
            value: function() {
                null != window[t.Global.platformName] && (window[t.Global.platformName].onShow && window[t.Global.platformName].onShow(function(e) {
                    t.AdPlat.instance.onShowCallback(e);
                }), window[t.Global.platformName].onHide && window[t.Global.platformName].onHide(function(e) {
                    t.AdPlat.instance.onHideCallback(e);
                }));
            }
        }, {
            key: "onShowCallback",
            value: function(t) {
                console.log("onShowCallback", t), t = new Date().getTime(), this.wx_isShared && (4e3 <= t - this.wx_sharedCloseTime ? (console.log("分享成功"), 
                this.wx_sharedCloseTime = t, this.shareCallback && this.shareCallback.call(this.shareCallbackTarget, !0)) : (console.log("分享失败"), 
                this.shareCallback && this.shareCallback.call(this.shareCallbackTarget, !1)), this.wx_isShared = !1);
            }
        }, {
            key: "onHideCallback",
            value: function(t) {
                console.log("onHideCallback", t), (t = t && (8 == t.targetAction || 9 == t.targetAction || 10 == t.targetAction) && 50 < t.targetPagePath.length) && this.autoBannerCallback && this.autoBannerCallback.call(this.autoBannerCallbackTarget, t), 
                this.autoBannerCallback = null, this.autoBannerCallbackTarget = null;
            }
        }, {
            key: "setLoginCallback",
            value: function(t, e) {
                this.loginCallback = t, this.loginCallbackTarget = e;
            }
        }, {
            key: "login",
            value: function(e, a) {
                if (!t.Global.appKey || t.Global.appKey.length <= 0 || !t.Global.channel || t.Global.channel.length <= 0) return this.loginCallback && this.loginCallback.call(this.loginCallbackTarget, t.Global.userInfo), 
                this.loginCallback = null, void (this.loginCallbackTarget = null);
                e = t.Global.API_URL + "?service=" + t.Global.API_NAME + ".login&appkey=" + t.Global.appKey + "&channel=" + t.Global.channel + "&token=" + e + "&openid=" + a, 
                t.Global.doGet(e, this.onLoginComplete, this);
            }
        }, {
            key: "onLoginComplete",
            value: function(e) {
                e && 200 == e.ret && e.data && 0 == e.data.errcode && e.data.userinfo && (e.data.userinfo.nickname && 0 < e.data.userinfo.nickname.length && (t.Global.userInfo.nickName = e.data.userinfo.nickname), 
                e.data.userinfo.user_avatar && 0 < e.data.userinfo.user_avatar.length && (t.Global.userInfo.avatarUrl = e.data.userinfo.user_avatar), 
                t.Global.userInfo.gameLevel = Number(e.data.userinfo.game_level), t.Global.userInfo.level = Number(e.data.userinfo.user_level), 
                t.Global.userInfo.money = Number(e.data.userinfo.user_money), t.Global.userInfo.score = Number(e.data.userinfo.user_score), 
                t.Global.userInfo.openid = e.data.userinfo.openid, t.Global.userInfo.uid = Number(e.data.userinfo.id), 
                t.Global.reportAldOpenId(t.Global.userInfo.openid), window[t.Global.platformName] && window[t.Global.platformName].setStorageSync && window[t.Global.platformName].setStorageSync("wxopenid", t.Global.userInfo.openid)), 
                this.loginCallback && this.loginCallback.call(this.loginCallbackTarget, t.Global.userInfo), 
                this.loginCallback = null, this.loginCallbackTarget = null;
            }
        }, {
            key: "requestRankList",
            value: function(e, a, o, n) {
                !t.Global.appKey || t.Global.appKey.length <= 0 || !t.Global.channel || t.Global.channel.length <= 0 ? o && o.call(n) : (this.rankCallback = o, 
                this.rankCallbackTarget = n, "gameLevel" == e ? e = "game_level" : "level" == e ? e = "user_level" : "money" == e ? e = "user_money" : "score" == e && (e = "user_score"), 
                o = t.Global.API_URL + "?service=" + t.Global.API_NAME + ".getRankList&appkey=" + t.Global.appKey + "&channel=" + t.Global.channel + "&keyword=" + e + "&pageSize=" + (a = a || 100), 
                t.Global.doGet(o, this.onResponseRankList, this));
            }
        }, {
            key: "onResponseRankList",
            value: function(e) {
                var a = [];
                if (e && 200 == e.ret && e.data && 0 == e.data.errcode && e.data.list && 0 < e.data.list.length) for (var o = 0; o < e.data.list.length; o++) {
                    var n = e.data.list[o], i = new t.UserInfo();
                    n.game_level && (i.gameLevel = Number(n.game_level)), n.user_level && (i.level = Number(n.user_level)), 
                    n.user_money && (i.money = Number(n.user_money)), n.user_score && (i.score = Number(n.user_score)), 
                    n.nickname && 0 < n.nickname.length && (i.nickName = n.nickname), n.user_avatar && 0 < n.user_avatar.length && (i.avatarUrl = n.user_avatar), 
                    i.openid = n.openid, i.uid = Number(n.id), a.push(i);
                }
                this.rankCallback && this.rankCallback.call(this.rankCallbackTarget, a), this.rankCallback = null, 
                this.rankCallbackTarget = null;
            }
        }, {
            key: "reportEvent",
            value: function(e) {
                !t.Global.appKey || t.Global.appKey.length <= 0 || !t.Global.channel || t.Global.channel.length <= 0 || null == e || e.length <= 0 || t.Global.userInfo && t.Global.userInfo.uid && (e = t.Global.API_URL + "?service=" + t.Global.API_NAME + ".createEvent&appkey=" + t.Global.appKey + "&channel=" + t.Global.channel + "&uid=" + t.Global.userInfo.uid + "&stageName=" + e, 
                t.Global.doGet(e));
            }
        }, {
            key: "init",
            value: function(e) {
                if (!this.isInit) {
                    if (this.isInit = !0, this.systemInfo = this.getSystemInfoSync(), this.initRecord(), 
                    this.initShare(), this.regisiterCallback(), window[t.Global.platformName] && window[t.Global.platformName].setKeepScreenOn && window[t.Global.platformName].setKeepScreenOn({
                        keepScreenOn: !0
                    }), this.shareInfoArr = [], e && e.shareInfoArr && (this.shareInfoArr = e.shareInfoArr), 
                    e && e.adBannerIdList) for (var a = e.adBannerIdList, o = 0; o < a.length; o++) {
                        var n = a[o];
                        0 < n.length && this.createBanner(n);
                    }
                    if (e && e.adCustomIdList) for (var i = e.adCustomIdList, l = 0; l < i.length; l++) {
                        var s = i[l];
                        0 < s.length && this.createCustom(s, l);
                    }
                    var r;
                    e && e.adVideoIdList && 0 < e.adVideoIdList.length && this.createRewardedVideo(e.adVideoIdList), 
                    e && e.adInterstitialId && 0 < e.adInterstitialId.length && (r = e.adInterstitialId, 
                    this.createInterstitial(r)), e && e.isExportWxGameAd && this.requestGameExportData(), 
                    e && e.adBoxBannerId && 0 < e.adBoxBannerId.length && (this.boxBannerAdUnitId = e.adBoxBannerId), 
                    e && e.adBoxPortalId && 0 < e.adBoxPortalId.length && (this.adBoxPortalUnitId = e.adBoxPortalId);
                }
            }
        }, {
            key: "initShare",
            value: function() {
                null != window[t.Global.platformName] && (window[t.Global.platformName].showShareMenu && window[t.Global.platformName].showShareMenu({
                    withShareTicket: !0,
                    menus: [ "shareAppMessage", "shareTimeline" ],
                    success: null,
                    fail: null,
                    complete: null
                }), window[t.Global.platformName].onShareAppMessage && window[t.Global.platformName].onShareAppMessage(function() {
                    return t.AdPlat.instance.buildShareInfo();
                }), window[t.Global.platformName].onShareTimeline && window[t.Global.platformName].onShareTimeline(function() {
                    return t.AdPlat.instance.buildShareInfo();
                }));
            }
        }, {
            key: "initRecord",
            value: function() {
                console.warn("----初始化录屏---initRecord-----------"), this.recorderManager || (window[t.Global.platformName] && window[t.Global.platformName].getGameRecorderManager ? this.recorderManager = window[t.Global.platformName].getGameRecorderManager() : this.recorderManager = null, 
                console.warn("initRecord", this.recorderManager));
            }
        }, {
            key: "getRecordDuration",
            value: function() {
                return this.recordDuration;
            }
        }, {
            key: "startRecord",
            value: function(e) {
                var a = this;
                void 0 === e && (e = 300), null == this.recorderManager && (this.initRecord(), null == this.recorderManager) || 0 == this.recordState && (this.recordState = 1, 
                console.log("startRecord - 开始录屏", this.recordState), 300 < e && (e = 300), this.recordVideoPath = null, 
                this.startRecordTimestamp = 0, this.recordDuration = 0, this.recorderManager.onStart(function(e) {
                    console.log("record onStart", e), t.AdPlat.instance.startRecordTimestamp = new Date().valueOf();
                }), this.recorderManager.onStop(function(e) {
                    console.log("record onStop", e, e.videoPath), t.AdPlat.instance.recordState = 0, 
                    t.AdPlat.instance.recordVideoPath = e.videoPath, e = new Date().valueOf(), t.AdPlat.instance.recordDuration = e - a.startRecordTimestamp;
                }), this.recorderManager.onError(function(e) {
                    console.log("record onError", e), t.AdPlat.instance.recordState = 0, t.AdPlat.instance.recordDuration = 0;
                }), this.recorderManager.start({
                    duration: e
                }));
            }
        }, {
            key: "stopRecord",
            value: function() {
                null != this.recorderManager && 0 != this.recordState && (this.recordState = 0, 
                console.log("stopRecord - 手工停止录屏", this.recordState), this.recorderManager.stop());
            }
        }, {
            key: "pauseRecord",
            value: function() {
                null != this.recorderManager && (console.log("pauseRecord - 暂停录屏", this.recordState), 
                1 == this.recordState && (this.recordState = 2, this.recorderManager.pause()));
            }
        }, {
            key: "resumeRecord",
            value: function() {
                null != this.recorderManager && (console.log("resumeRecord - 继续录屏", this.recordState), 
                2 == this.recordState && this.recorderManager.resume());
            }
        }, {
            key: "share",
            value: function(e, a, o, n) {
                null == window[t.Global.platformName] || null == window[t.Global.platformName].shareAppMessage ? a && a.call(n, !0) : (this.shareCallback = a, 
                this.shareShortCallback = o, this.shareCallbackTarget = n, a = this.buildShareInfo(e), 
                console.log("分享数据：", a), null != a && (t.Global.isWxgame && (this.wx_isShared = !0, 
                this.wx_sharedCloseTime = new Date().getTime()), window[t.Global.platformName].shareAppMessage(a)));
            }
        }, {
            key: "buildShareInfo",
            value: function(e) {
                void 0 === e && (e = null);
                var a = this, o = "", n = "";
                if (this.shareInfoArr && 0 < this.shareInfoArr.length && ((l = this.shareInfoArr[0]) && l.title && (o = l.title), 
                l && l.img && (n = l.img)), t.Global.isTTGame) {
                    var i, l = this.recordVideoPath;
                    console.warn("videoPath", l);
                    var s = "", r = (e && -1 != [ "article", "video", "token" ].indexOf(e.channel) && (s = e.channel), 
                    []);
                    for (i in e) r.push(i + "=" + e[i]);
                    return {
                        channel: s,
                        title: o,
                        imageUrl: n,
                        query: r.join("&"),
                        extra: {
                            videoPath: l,
                            videoTopics: [ o ],
                            withVideoId: !0
                        },
                        success: function(t) {
                            console.log("share video success :", t), a.shareVideoId = t.videoId, a.shareCallback && a.shareCallback.call(a.shareCallbackTarget, !0);
                        },
                        fail: function(t) {
                            if (console.log("share video fail ", t), console.log("index of : ", t.errMsg.indexOf("short")), 
                            t && t.errMsg && -1 != t.errMsg.indexOf("short") && a.shareShortCallback) return console.log("时间太短 执行回调", t), 
                            void a.shareShortCallback.call(a.shareCallbackTarget, t);
                            a.shareCallback && a.shareCallback.call(a.shareCallbackTarget, !1);
                        }
                    };
                }
                if (t.Global.isWxgame) {
                    console.log("uniSdk.Global.isWxgame true");
                    var h = {};
                    return h.query = e, o && 0 < o.length && (h.title = o), n && 0 < n.length && (h.imageUrl = n), 
                    h;
                }
                return null;
            }
        }, {
            key: "showRewardedVideo",
            value: function(t, a, o) {
                this.video ? this.isVideoShowed ? console.warn("操作视频广告过于频繁") : (this.isVideoShowed = !0, 
                this.video.show(t, a, o), this.showVideoTimeout = window.setTimeout(function() {
                    e.instance.isVideoShowed = !1, e.instance.showVideoTimeout && (window.clearTimeout(e.instance.showVideoTimeout), 
                    e.instance.showVideoTimeout = null);
                }, 3e3)) : a && a.call(o, 1);
            }
        }, {
            key: "showInterstitial",
            value: function(t, e, a) {
                this.interstitial ? this.interstitial.show(t, e, a) : t ? t.call(a, !1) : e && e.call(a);
            }
        }, {
            key: "showCustomAd",
            value: function(t, e, a, o) {
                this.customs.length <= (t = t || 0) ? e && e.call(o, !1) : this.customs[t].show(e, a, o);
            }
        }, {
            key: "hideCustomAd",
            value: function(t) {
                if (null == t) for (var e = 0; e < this.customs.length; e++) this.customs[e].hide(); else if (!(this.customs.length <= t)) {
                    this.customs[t].hide();
                }
            }
        }, {
            key: "setBannerMaxShowTimes",
            value: function(t) {
                for (var e = 0; e < this.banners.length; e++) this.banners[e].setShowTime(t);
            }
        }, {
            key: "setBannerWidth",
            value: function(t) {
                this.bannerWidth = t;
            }
        }, {
            key: "availableBanner",
            value: function() {
                for (var t = 0; t < this.banners.length; t++) {
                    var e = this.banners[t];
                    if (e.isLoaded) return e;
                }
                return null;
            }
        }, {
            key: "createBanner",
            value: function(e) {
                for (var a = 0; a < this.banners.length; a++) if (this.banners[a].id == e) return null;
                var o = null;
                "wx" == t.Global.channel ? o = new t.WX_AdBanner(e, this.bannerWidth) : "vivo" == t.Global.channel ? o = new t.VIVO_AdBanner(e, this.bannerWidth) : "oppo" == t.Global.channel ? o = new t.OPPO_AdBanner(e, this.bannerWidth) : "tt" == t.Global.channel && (o = new t.TT_AdBanner(e, this.bannerWidth)), 
                o && this.banners.push(o);
            }
        }, {
            key: "destroyBanners",
            value: function() {
                for (var t = 0; t < this.banners.length; t++) {
                    this.banners[t].destroy();
                }
                this.banners.length = 0;
            }
        }, {
            key: "createCustom",
            value: function(e, a) {
                var o = null;
                "wx" == t.Global.channel ? o = new t.WX_AdCustom(e, a) : "vivo" == t.Global.channel ? o = new t.VIVO_AdCustom(e, a) : "oppo" == t.Global.channel && (o = new t.OPPO_AdCustom(e, a)), 
                o && this.customs.push(o);
            }
        }, {
            key: "createRewardedVideo",
            value: function(e) {
                "wx" == t.Global.channel ? this.video = new t.WX_AdRewardedVideo(e) : "vivo" == t.Global.channel ? this.video = new t.VIVO_AdRewardedVideo(e) : "oppo" == t.Global.channel ? this.video = new t.OPPO_AdRewardedVideo(e) : "tt" == t.Global.channel && (this.video = new t.TT_AdRewardedVideo(e));
            }
        }, {
            key: "createInterstitial",
            value: function(e) {
                "wx" == t.Global.channel ? this.interstitial = new t.WX_AdInterstitial(e) : "vivo" == t.Global.channel ? this.interstitial = new t.VIVO_AdInterstitial(e) : "oppo" == t.Global.channel ? this.interstitial = new t.OPPO_AdInterstitial(e) : "tt" == t.Global.channel && (this.interstitial = new t.TT_AdInterstitial(e));
            }
        }, {
            key: "showBoxBannerAd",
            value: function(e, a) {
                !this.boxBannerAdUnitId || this.boxBannerAdUnitId.length <= 0 || t.Global.isVivogame && window[t.Global.platformName] && window[t.Global.platformName].createBoxBannerAd && (null == this.boxBannerAd && (this.boxBannerAdCloseCallback = e, 
                this.boxBannerAdCallbackTarget = a, this.boxBannerAd = window[t.Global.platformName].createBoxBannerAd({
                    posId: this.boxBannerAdUnitId
                }), this.boxBannerAd.onClose(this.onCloseForBoxBannerAd.bind(this))), this.boxBannerAd.show());
            }
        }, {
            key: "hideBoxBannerAd",
            value: function(e) {
                void 0 === e && (e = !0), t.Global.isVivogame && this.boxBannerAd && (this.boxBannerAd.hide(), 
                e && (this.boxBannerAd.offClose(this.onCloseForBoxBannerAd), this.boxBannerAd.isDestroyed = !0, 
                this.boxBannerAd.destroy(), this.boxBannerAd = null, this.boxBannerAdCloseCallback = null, 
                this.boxBannerAdCallbackTarget = null));
            }
        }, {
            key: "onCloseForBoxBannerAd",
            value: function() {
                t.Global.isVivogame && this.boxBannerAd && (this.boxBannerAd.isDestroyed || this.boxBannerAdCloseCallback && this.boxBannerAdCloseCallback.call(this.boxBannerAdCallbackTarget));
            }
        }, {
            key: "createBoxPortalAd",
            value: function(e, a, o) {
                !this.adBoxPortalUnitId || this.adBoxPortalUnitId.length <= 0 || (t.Global.isVivogame && window[t.Global.platformName] && window[t.Global.platformName].createBoxPortalAd && null == this.boxPortalAd ? (this.boxPortalAd = e && 0 < e ? window[t.Global.platformName].createBoxPortalAd({
                    posId: this.adBoxPortalUnitId,
                    marginTop: e
                }) : window[t.Global.platformName].createBoxPortalAd({
                    posId: this.adBoxPortalUnitId
                }), this.boxPortalAd.show()) : t.Global.isOppogame && window[t.Global.platformName] && window[t.Global.platformName].createGamePortalAd && (null == this.boxPortalAd && (this.boxPortalAdCloseCallback = a, 
                this.boxPortalAdCallbackTarget = o, this.boxPortalAd = window[t.Global.platformName].createGamePortalAd({
                    adUnitId: this.adBoxPortalUnitId
                }), this.boxPortalAd.onClose(this.onCloseForBoxPortalAd.bind(this))), this.boxPortalAd.show()));
            }
        }, {
            key: "destroyBoxPortalAd",
            value: function() {
                this.boxPortalAd && (this.boxPortalAd.offClose(this.onCloseForBoxPortalAd), this.boxPortalAd.destroy(), 
                this.boxPortalAd = null);
            }
        }, {
            key: "onCloseForBoxPortalAd",
            value: function() {
                t.Global.isOppogame && this.boxPortalAd && this.boxPortalAdCloseCallback && this.boxPortalAdCloseCallback.call(this.boxPortalAdCallbackTarget);
            }
        }, {
            key: "showBanner",
            value: function(e) {
                this.banners.length <= 0 ? console.warn("banner id 列表为空") : (e = (e = void 0 === e ? -1 : e) < 0 || e >= this.banners.length ? -1 : e) < 0 ? (null == this.showBannerTimeout && (this.showBannerTimeout = window.setInterval(function() {
                    t.AdPlat.instance.changeShowBanner(-1);
                }, 8e3)), this.changeShowBanner(-1)) : (this.showBannerTimeout && (window.clearInterval(this.showBannerTimeout), 
                this.showBannerTimeout = null), this.changeShowBanner(e));
            }
        }, {
            key: "hideBanner",
            value: function() {
                this.showBannerTimeout && (window.clearInterval(this.showBannerTimeout), this.showBannerTimeout = null);
                for (var t = 0; t < this.banners.length; t++) {
                    this.banners[t].hide();
                }
            }
        }, {
            key: "changeShowBanner",
            value: function(t) {
                for (var e = 0; e < this.banners.length; e++) {
                    this.banners[e].hide();
                }
                this.curBannerIndex >= this.banners.length && (this.curBannerIndex = 0), t < 0 && (t = this.curBannerIndex), 
                this.banners[t].show(), ++this.curBannerIndex;
            }
        }, {
            key: "requestGameExportData",
            value: function() {
                var e = new Date().valueOf();
                e = t.Global.DOWNLOAD_URL + "table/adItemList.json?t=" + e;
                t.Global.doGet(e, this.requestGameExportDataComplete, this);
            }
        }, {
            key: "requestGameExportDataComplete",
            value: function(e) {
                if (t.Global.adItemDataList = [], e) {
                    for (var a = 0; a < e.length; a++) {
                        var o = e[a];
                        t.Global.adItemDataList.push(o);
                    }
                    this.loadAsset(t.Global.adItemDataList);
                }
            }
        }, {
            key: "loadAsset",
            value: function(t) {
                for (var e = 0; e < t.length; e++) {
                    var a = t[e];
                    this.loadAssetImpl(a);
                }
            }
        }, {
            key: "loadAssetImpl",
            value: function(t) {
                window.cc.assetManager.loadRemote(t.img, function(e, a) {
                    e ? console.error(e.message || e) : t.imageAsset = a;
                });
            }
        } ], [ {
            key: "instance",
            get: function() {
                return null == e._instance && (e._instance = new e()), e._instance;
            }
        } ]), e;
    }();
    t.AdPlat = e;
}(t = t || {}), function(t) {
    t.UserInfo = function() {
        function e() {
            r(this, e);
        }
        return h(e, [ {
            key: "uid",
            get: function() {
                return this._uid;
            },
            set: function(t) {
                this._uid = t;
            }
        }, {
            key: "openid",
            get: function() {
                return this._openid;
            },
            set: function(t) {
                this._openid = t;
            }
        }, {
            key: "nickName",
            get: function() {
                return this._nickName;
            },
            set: function(t) {
                this._nickName = t, this.send("nickname=" + t);
            }
        }, {
            key: "avatarUrl",
            get: function() {
                return this._avatarUrl;
            },
            set: function(t) {
                this._avatarUrl = t, this.send("avatar=" + t);
            }
        }, {
            key: "gameLevel",
            get: function() {
                return this._gameLevel;
            },
            set: function(t) {
                this._gameLevel = t, this.send("gameleval=" + t);
            }
        }, {
            key: "level",
            get: function() {
                return this._level;
            },
            set: function(t) {
                this._level = t, this.send("userleval=" + t);
            }
        }, {
            key: "money",
            get: function() {
                return this._money;
            },
            set: function(t) {
                this._money = t, this.send("money=" + t);
            }
        }, {
            key: "score",
            get: function() {
                return this._score;
            },
            set: function(t) {
                this._score = t, this.send("score=" + t);
            }
        }, {
            key: "send",
            value: function(e) {
                !t.Global.appKey || t.Global.appKey.length <= 0 || !t.Global.channel || t.Global.channel.length <= 0 || this._uid && 0 < this._uid && this._openid && 0 < this._openid.length && t.Global.userInfo && t.Global.userInfo._uid == this._uid && (e = t.Global.API_URL + "?service=" + t.Global.API_NAME + ".updateUserInfo&appkey=" + t.Global.appKey + "&channel=" + t.Global.channel + "&openid=" + this._openid + "&" + e, 
                t.Global.doGet(e));
            }
        } ]), e;
    }();
}(t = t || {}), function(t) {
    var e = function() {
        function e() {
            r(this, e);
        }
        return h(e, null, [ {
            key: "doPost",
            value: function(e, a, o, n) {
                new t.HttpClient().send(e, a, o, n, "POST");
            }
        }, {
            key: "doGet",
            value: function(e, a, o) {
                new t.HttpClient().send(e, null, a, o, "GET");
            }
        }, {
            key: "reportAldOpenId",
            value: function(e) {
                e && e.length && 0 < e.length && window[t.Global.platformName] && window[t.Global.platformName].aldSendOpenid && window[t.Global.platformName].aldSendOpenid(e);
            }
        }, {
            key: "reportAldEvent",
            value: function(e, a) {
                null == a && (a = {}), window[t.Global.platformName] && window[t.Global.platformName].aldSendEvent && window[t.Global.platformName].aldSendEvent(e, a);
            }
        }, {
            key: "reportAldStageStart",
            value: function(e, a) {
                null == a && (a = "第" + e.toString() + "关"), e = {
                    stageId: e.toString(),
                    stageName: a
                }, window[t.Global.platformName] && window[t.Global.platformName].aldStage && window[t.Global.platformName].aldStage.onStart && window[t.Global.platformName].aldStage.onStart(e);
            }
        }, {
            key: "reportAldStageEnd",
            value: function(e, a) {
                null == a && (a = "第" + e.toString() + "关"), e = {
                    stageId: e.toString(),
                    stageName: a,
                    event: "complete"
                }, window[t.Global.platformName] && window[t.Global.platformName].aldStage && window[t.Global.platformName].aldStage.onEnd && window[t.Global.platformName].aldStage.onEnd(e);
            }
        }, {
            key: "reportAldStageFail",
            value: function(e, a) {
                null == a && (a = "第" + e.toString() + "关"), e = {
                    stageId: e.toString(),
                    stageName: a,
                    event: "fail"
                }, window[t.Global.platformName] && window[t.Global.platformName].aldStage && window[t.Global.platformName].aldStage.onEnd && window[t.Global.platformName].aldStage.onEnd(e);
            }
        }, {
            key: "reportAldStageAward",
            value: function(e, a, o) {
                null == a && (a = "第" + e.toString() + "关"), null == o && (o = "奖励行为"), e = {
                    stageId: e.toString(),
                    stageName: a,
                    event: "award",
                    params: {
                        itemName: o
                    }
                }, window[t.Global.platformName] && window[t.Global.platformName].aldStage && window[t.Global.platformName].aldStage.onRunning && window[t.Global.platformName].aldStage.onRunning(e);
            }
        }, {
            key: "reportAldStageTools",
            value: function(e, a, o, n) {
                null == a && (a = "第" + e.toString() + "关"), null == o && (o = "使用道具"), null == n && (n = 1), 
                e = {
                    stageId: e.toString(),
                    stageName: a,
                    event: "tools",
                    params: {
                        itemName: o,
                        itemCount: n
                    }
                }, window[t.Global.platformName] && window[t.Global.platformName].aldStage && window[t.Global.platformName].aldStage.onRunning && window[t.Global.platformName].aldStage.onRunning(e);
            }
        }, {
            key: "reportEvent",
            value: function(e) {
                t.AdPlat.instance.reportEvent(e);
            }
        }, {
            key: "pause",
            value: function() {}
        }, {
            key: "resume",
            value: function() {}
        }, {
            key: "isWxgame",
            get: function() {
                return void 0 !== window.wx && void 0 === window.tt;
            }
        }, {
            key: "isQQGame",
            get: function() {
                return void 0 !== window.qq;
            }
        }, {
            key: "isVivogame",
            get: function() {
                return void 0 !== window.qg && -1 < window.qg.getProvider().toLowerCase().indexOf("vivo");
            }
        }, {
            key: "isOppogame",
            get: function() {
                return void 0 !== window.qg && -1 < window.qg.getProvider().toLowerCase().indexOf("oppo");
            }
        }, {
            key: "isTTGame",
            get: function() {
                return void 0 !== window.tt;
            }
        }, {
            key: "isFastGame",
            get: function() {
                return void 0 !== window.hbs;
            }
        }, {
            key: "isH5",
            get: function() {
                return !(e.isWxgame || e.isVivogame || e.isOppogame || e.isQQGame || e.isFastGame || e.isTTGame);
            }
        } ]), e;
    }();
    e.adItemDataList = [], e.DOWNLOAD_URL = "https://download.zerosgame.com/download/", 
    e.API_URL = "https://zerosgame.com/api/index.php", e.API_NAME = "api", t.Global = e;
}(t = t || {}), function(t) {
    t.init = function(e, a, o) {
        console.log("uniSdk init", e), e && e.app_key && (!e.app_key || e.app_key.length <= 0 ? console.warn("未配置 app_key 字段，请查看 https://zerosgame.com/admin 获取 app_key") : t.Global.appKey = e.app_key), 
        t.Global.screenWidth = 720, t.Global.screenHeight = 1280, t.Global.platformName = "h5", 
        t.Global.channel = "h5", t.Global.isTTGame ? (t.Global.platformName = "tt", t.Global.channel = "tt") : t.Global.isWxgame ? (t.Global.platformName = "wx", 
        t.Global.channel = "wx") : t.Global.isOppogame ? (t.Global.platformName = "qg", 
        t.Global.channel = "oppo") : t.Global.isQQGame ? (t.Global.platformName = "qq", 
        t.Global.channel = "qq") : t.Global.isVivogame ? (t.Global.platformName = "qg", 
        t.Global.channel = "vivo") : t.Global.isFastGame && (t.Global.platformName = "hbs", 
        t.Global.channel = "huawei"), console.log("channel", t.Global.channel), console.log("platformName", t.Global.platformName);
        try {
            if ("h5" == t.Global.channel) {
                var n = null;
                e && ((n = new t.AdConfig()).isExportWxGameAd = e.isExportWxGameAd), t.AdPlat.instance.init(n);
            } else t.AdPlat.instance.init(e);
        } catch (a) {
            console.error("uniSdk.init 初始化异常", a);
        }
        if (t.Global.appKey) {
            if (t.Global.userInfo = new t.UserInfo(), t.Global.userInfo.avatarUrl = "", t.Global.userInfo.nickName = "", 
            t.Global.userInfo.level = 0, t.Global.userInfo.gameLevel = 0, t.Global.userInfo.money = 0, 
            t.Global.userInfo.score = 0, window[t.Global.platformName] && window[t.Global.platformName].getStorageSync) {
                var i = window[t.Global.platformName].getStorageSync("wxopenid");
                i && 0 < i.length && (t.Global.userInfo.openid = i), (i = window[t.Global.platformName].getStorageSync("wxusernickname")) && 0 < i.length && (t.Global.userInfo.nickName = i), 
                (i = window[t.Global.platformName].getStorageSync("wxuseravatar")) && 0 < i.length && (t.Global.userInfo.avatarUrl = i);
            }
            t.login(a, o);
        } else a && a.call(o, t.Global.userInfo);
    }, t.login = function(e, a) {
        !t.Global.appKey || t.Global.appKey.length <= 0 || !t.Global.channel || t.Global.channel.length <= 0 || null == t.Global.userInfo || null == t.Global.userInfo ? e && e.call(a, t.Global.userInfo) : t.Global.userInfo.openid && 0 < t.Global.userInfo.openid.length ? (t.AdPlat.instance.setLoginCallback(e, a), 
        t.AdPlat.instance.login("", t.Global.userInfo.openid)) : t.Global.isWxgame && window[t.Global.platformName] && window[t.Global.platformName].login ? (t.AdPlat.instance.setLoginCallback(e, a), 
        window[t.Global.platformName].login({
            success: function(o) {
                o.code ? t.AdPlat.instance.login(o.code, "") : (console.log("登录失败！" + o.errMsg), 
                t.AdPlat.instance.setLoginCallback(null, null), e && e.call(a, t.Global.userInfo));
            },
            fail: function() {
                console.warn("login fail"), t.AdPlat.instance.setLoginCallback(null, null), e && e.call(a, t.Global.userInfo);
            }
        })) : e && e.call(a, t.Global.userInfo);
    }, t.authorizeUserInfo = function(e, a, o) {
        window[t.Global.platformName] && window[t.Global.platformName].getUserProfile ? ((null == e || e.length <= 0) && (e = "获取你的头像、昵称"), 
        window[t.Global.platformName].getUserProfile({
            desc: e,
            success: function(e) {
                var n = t.Global.userInfo;
                e && e.userInfo ? ((n = null == n ? new t.UserInfo() : n).nickName = e.userInfo.nickName, 
                n.avatarUrl = e.userInfo.avatarUrl, window[t.Global.platformName].setStorageSync("wxusernickname", n.nickName), 
                window[t.Global.platformName].setStorageSync("wxuseravatar", n.avatarUrl)) : n = null, 
                a && a.call(o, n);
            },
            fail: function(t) {
                console.warn("授权失败", t), a && a.call(o, null);
            }
        })) : a && a.call(o, null);
    }, t.showToast = function(e) {
        window[t.Global.platformName] && window[t.Global.platformName].showToast ? window[t.Global.platformName].showToast({
            message: e,
            title: e
        }) : window.alert && (console.log("showToast", e), window.alert(e));
    }, t.showPopup = function(e, a, o, n, i, l, s, r) {
        void 0 === l && (l = "提示"), void 0 === s && (s = "确定"), void 0 === r && (r = "取消"), 
        void 0 === i && (i = !1), window[t.Global.platformName] && window[t.Global.platformName].showModal && window[t.Global.platformName].showModal({
            title: l,
            content: e,
            showCancel: i,
            confirmText: s,
            cancelText: r,
            success: function(t) {
                t.confirm ? a && a.call(n) : t.cancel && o && o.call(n);
            }
        }), window[t.Global.platformName] && window[t.Global.platformName].showDialog ? window[t.Global.platformName].showDialog({
            title: l,
            message: e,
            buttons: i ? [ {
                text: s
            }, {
                text: r
            } ] : [ {
                text: s
            } ],
            confirmText: s,
            cancelText: r,
            success: function(t) {
                0 == t.index ? a && a.call(n) : o && o.call(n);
            },
            cancel: function(t) {
                o && o.call(n);
            }
        }) : window.GX && window.GX.Tips ? window.GX.Tips.showPopup(e, a, o, n, i, l, s, r) : window.alert && (console.log("showPopup", e), 
        window.alert(e));
    }, t.requestRankList = function(e, a, o, n) {
        t.AdPlat.instance.requestRankList(e, a, o, n);
    }, t.subscribeMessage = function(e, a, o) {
        e && !(e.length <= 0) && !(!t.Global.appKey || t.Global.appKey.length <= 0 || !t.Global.channel || t.Global.channel.length <= 0 || "wx" != t.Global.channel) && t.Global.userInfo && t.Global.userInfo.uid && window[t.Global.platformName] && window[t.Global.platformName].requestSubscribeMessage ? window[t.Global.platformName].requestSubscribeMessage({
            tmplIds: [ e ],
            success: function(n) {
                console.log("requestSubscribeMessage", n), "requestSubscribeMessage:ok" == n.errMsg && "accept" == n[e] ? (n = t.Global.API_URL + "?service=" + t.Global.API_NAME + ".subscribeMessage&appkey=" + t.Global.appKey + "&channel=" + t.Global.channel + "&openid=" + t.Global.userInfo.openid + "&tmplId=" + e, 
                t.Global.doGet(n), a && a.call(o, !0)) : a && a.call(o, !1);
            },
            fail: function(t) {
                console.log("requestSubscribeMessage fail", t), a && a.call(o, !1);
            }
        }) : a && a.call(o, !1);
    }, t.getSystemInfo = function() {
        return t.AdPlat.instance.getSystemInfoSync();
    };
    var e = null;
    t.showGameClubButton = function(a, o, n, i, l) {
        if (t.Global.isWxgame) {
            if (null == e) {
                void 0 === a && (a = 0), void 0 === o && (o = 0), void 0 === n && (n = 40), void 0 === i && (i = 40);
                var s, r = !1;
                a = a / 720 * (s = (2 <= (s = (l = !l || l.length <= 0 ? "dark" : l).split(".")).length && ("jpg" != (s = s[s.length - 1]) && "png" != s || (r = !0)), 
                t.getSystemInfo())).windowWidth, o = o / 1280 * s.windowHeight, n = n / 720 * s.windowWidth, 
                i = i / 720 * s.windowWidth;
                var h = {};
                h.style = {
                    left: a,
                    top: o,
                    width: n,
                    height: i
                }, h.type = "image", r ? h.image = l : h.icon = l, e = window[t.Global.platformName].createGameClubButton(h);
            }
            e && e.show();
        }
    }, t.hideGameClubButton = function() {
        t.Global.isWxgame && e && e.hide();
    }, t.destoryGameClubButton = function() {
        t.Global.isWxgame && (e && e.destroy(), e = null);
    }, t.vibrateLong = function() {
        window[t.Global.platformName] && window[t.Global.platformName].vibrateLong && window[t.Global.platformName].vibrateLong();
    }, t.navigateToMiniProgram = function(e, a, o) {
        window[t.Global.platformName] && window[t.Global.platformName].navigateToMiniProgram ? window[t.Global.platformName].navigateToMiniProgram({
            appId: e.appid,
            path: e.path,
            success: function(t) {
                console.log("跳转成功 ", t), a && a.call(o, !0, e);
            },
            fail: function(t) {
                console.log("跳转失败 ", t), a && a.call(o, !1, e);
            }
        }) : (console.log("跳转失败 "), a && a.call(o, !1, e), t.showToast("当前渠道不支持导出小游戏：" + e.title));
    }, t.showRewardedVideo = function(e, a, o) {
        t.AdPlat.instance.showRewardedVideo(e, a, o);
    }, t.showInterstitial = function(e, a, o) {
        t.AdPlat.instance.showInterstitial(e, a, o);
    }, t.showBanner = function(e) {
        t.AdPlat.instance.showBanner(e);
    }, t.hideBanner = function() {
        t.AdPlat.instance.hideBanner();
    }, t.showCustomAd = function(e, a, o, n) {
        t.AdPlat.instance.showCustomAd(e, a, o, n);
    }, t.hideCustomAd = function(e) {
        t.AdPlat.instance.hideCustomAd(e);
    }, t.share = function(e, a, o, n) {
        t.AdPlat.instance.share(e, a, o, n);
    }, t.showBoxBannerAd = function(e, a) {
        t.AdPlat.instance.showBoxBannerAd(e, a);
    }, t.hideBoxBannerAd = function(e) {
        t.AdPlat.instance.hideBoxBannerAd(e);
    }, t.createBoxPortalAd = function(e, a, o) {
        t.AdPlat.instance.createBoxPortalAd(e, a, o);
    }, t.destroyBoxPortalAd = function() {
        t.AdPlat.instance.destroyBoxPortalAd();
    }, t.getCustomAdStyle = function(e) {
        var a = t.getSystemInfo(), o = {
            top: .5 * (a.windowHeight - 400),
            left: .5 * (a.windowWidth - 320),
            fixed: !1,
            width: 320
        };
        return t.Global.isVivogame ? o.left = void 0 : t.Global.isOppogame && (o = null), 
        o;
    }, t.notityBannerResize = function(t, e) {};
}(t = t || {}), window.uniSdk = t;